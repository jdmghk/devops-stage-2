version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
    container_name: devops_backend
    ports:
      - 8000:8000
    env_file:
      - ./backend/.env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    container_name: devops_frontend
    ports:
      - 5173:5173
    env_file:
      - ./frontend/.env

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/letsencrypt:/etc/letsencrypt
    ports:
      - "80:80"

    depends_on:
      - frontend
      - backend
      - db
      - adminer
      - nginx-proxy-manager

  nginx-proxy-manager:
    image: "jc21/nginx-proxy-manager:latest"
    restart: unless-stopped
    ports:
      - "8092:81" # Admin Web Port

    volumes:
      - ./proxy/data:/data
      - ./proxy/letsencrypt:/etc/letsencrypt

  db:
    image: postgres:14-alpine
    container_name: devops_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-devops}
      PGDATA: /data/postgres
      PGPORT: ${POSTGRES_PORT:-5432}
      POSTGRES_SCHEMA: public

    volumes:
      - postgres_data:/data/postgres

    ports:
      - ${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: db

volumes:
  postgres_data:
